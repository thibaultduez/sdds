/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asds;

import EJB1Remote.EJB1Remote;
import EJB2Remote.EJB2Remote;
import entities.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.jms.Topic;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kevinschorkops
 */
public class SuperviseurGUI extends javax.swing.JFrame implements MessageListener {

    private String loginSuperviseur;
    private DefaultListModel accordeListModel;
    private DefaultTableModel attenteTableModel;

    private EJB1Remote eJB1;
    private EJB2Remote eJB2;

    private Topic topic;
    private Connection connection;
    private Session session;

    private MessageProducer producer;
    private MessageConsumer consumer;

    private ArrayList<Credits> credits;
    private Double montantTransactions;

    /**
     * Creates new form SuperviseurGUI
     */
    public SuperviseurGUI() {
        initComponents();
    }

    public SuperviseurGUI(String loginSuperviseur, EJB1Remote eJB1, EJB2Remote eJB2, Topic topic, Connection connection, Session session) {
        initComponents();

        accordeListModel = new DefaultListModel<>();
        accordeList.setModel(accordeListModel);
        attenteTableModel = (DefaultTableModel) attenteTable.getModel();

        this.loginSuperviseur = loginSuperviseur;

        this.eJB1 = eJB1;
        this.eJB2 = eJB2;

        this.topic = topic;
        this.connection = connection;
        this.session = session;

        try {
            consumer = session.createConsumer(topic, "toSup");
            consumer.setMessageListener(this);
            producer = session.createProducer(topic);
        } catch (JMSException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        montantLabel = new javax.swing.JLabel();
        montantTF = new javax.swing.JTextField();
        accordeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        accordeList = new javax.swing.JList<>();
        attenteLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attenteTable = new javax.swing.JTable();
        validerButton = new javax.swing.JButton();
        refuserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Superviseur");

        montantLabel.setText("Montant total des transactions :");

        montantTF.setEditable(false);

        accordeLabel.setText("Crédit(s) accordé(s) :");

        jScrollPane1.setViewportView(accordeList);

        attenteLabel.setText("Crédit(s) en attente :");

        attenteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Montant", "Taux", "Duree", "Salaire", "Charge", "IdClient"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(attenteTable);

        validerButton.setText("Valider Crédit");
        validerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerButtonActionPerformed(evt);
            }
        });

        refuserButton.setText("Refuser Crédit");
        refuserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refuserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(attenteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(accordeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(montantLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(montantTF)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel1)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(validerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(refuserButton)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(montantLabel)
                    .addComponent(montantTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(accordeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(attenteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(validerButton)
                    .addComponent(refuserButton))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerButtonActionPerformed
        int i = attenteTable.getSelectedRow();
        if (i == -1) {
            return;
        }

        Credits selectedCredit = credits.get(i);
        selectedCredit.setAccorde(true);

        //eJB1.reponseVerifCredit(loginSuperviseur, selectedCredit);
        credits.remove(i);

        refreshTable();
    }//GEN-LAST:event_validerButtonActionPerformed

    private void refuserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refuserButtonActionPerformed
        int i = attenteTable.getSelectedRow();
        if (i == -1) {
            return;
        }

        Credits selectedCredit = credits.get(i);
        selectedCredit.setAccorde(false);

        //eJB1.reponseVerifCredit(loginSuperviseur, selectedCredit);
        credits.remove(i);

        refreshTable();
    }//GEN-LAST:event_refuserButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperviseurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperviseurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperviseurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperviseurGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperviseurGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accordeLabel;
    private javax.swing.JList<String> accordeList;
    private javax.swing.JLabel attenteLabel;
    private javax.swing.JTable attenteTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel montantLabel;
    private javax.swing.JTextField montantTF;
    private javax.swing.JButton refuserButton;
    private javax.swing.JButton validerButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(Message message) {
        try {
            TextMessage tm = (TextMessage) message;
            String[] parts = tm.getText().split("#");

            //transaction#34
            if(parts[0].equals("transaction")) {
                addTransaction(parts);
            } else {
                //demande#id#montant#taux#duree#salaire#charge#refClient#accorde#loginEmploye
                if (parts[0].equals("demande")) {
                    addDemandeCredit(parts);
                } else {
                    //accorde#id#montant#taux#duree#salaire#charge#refClient#accorde#loginEmploye
                    if (parts[0].equals("accorde")) {
                        addCreditAccorde(parts);
                    }
                }
            }
            
        } catch (JMSException ex) {
            Logger.getLogger(SuperviseurGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addTransaction(String[] parts)
    {
        montantTransactions += Double.parseDouble(parts[1]);
        montantTF.setText(montantTransactions.toString());
    }
    
    private void addDemandeCredit(String[] parts) {
        //type#id#montant#taux#duree#salaire#charge#refClient#accorde#loginEmploye
        Credits credit = new Credits();
        credit.setId(Long.parseLong(parts[1]));
        credit.setMontant(Double.parseDouble(parts[2]));
        credit.setTaux(Double.parseDouble(parts[3]));
        credit.setDuree(Integer.parseInt(parts[4]));
        credit.setSalaire(Double.parseDouble(parts[5]));
        credit.setChargeCredit(Double.parseDouble(parts[6]));
        Clients client = new Clients();
        client.setId(BigDecimal.valueOf(Long.parseLong(parts[7])));
        credit.setRefClient(client);
        credit.setAccorde(Boolean.parseBoolean(parts[8]));
        credits.add(credit);
        
        refreshTable();
    }
    
    private void addCreditAccorde(String[] parts) {
        //type#id#montant#taux#duree#salaire#charge#refClient#accorde#loginEmploye
        Credits credit = new Credits();
        credit.setId(Long.parseLong(parts[1]));
        credit.setMontant(Double.parseDouble(parts[2]));
        credit.setTaux(Double.parseDouble(parts[3]));
        credit.setDuree(Integer.parseInt(parts[4]));
        credit.setSalaire(Double.parseDouble(parts[5]));
        credit.setChargeCredit(Double.parseDouble(parts[6]));
        Clients client = new Clients();
        client.setId(BigDecimal.valueOf(Long.parseLong(parts[7])));
        credit.setRefClient(client);
        credit.setAccorde(Boolean.parseBoolean(parts[8]));
        
        accordeListModel.addElement(credit);
    }

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) attenteTable.getModel();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        int i = 0;
        for (Credits credit : credits) {
            model.addRow(new Object[]{
                credit.getId().toString(),
                credit.getMontant().toString(),
                credit.getTaux().toString(),
                credit.getDuree().toString(),
                credit.getSalaire().toString(),
                credit.getChargeCredit().toString(),
                credit.getRefClient().getId().toString()
            });
        }

        attenteTable.repaint();
    }
}
